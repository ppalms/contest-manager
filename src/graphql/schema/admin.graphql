schema @aws_api_key @aws_lambda {
  query: Query
  mutation: Mutation
}

type Query @aws_api_key @aws_lambda {
  listOrganizations: [Organization]
  getOrganizationWithUsers(id: ID!): OrganizationWithUsers
  listUsersByRole(role: UserRole): [User]
  listContests: [Contest]
  getContest(id: ID!): Contest
}

type Mutation @aws_api_key @aws_lambda {
  saveOrganization(organization: OrganizationInput!): Organization
  deleteOrganization(id: ID!): String
  saveOrgUser(user: SaveOrgUserInput!): User
  saveContest(contest: SaveContestInput!): Contest
  deleteContest(id: ID!): String
}

# ** Organizations ** #
type Organization @aws_api_key @aws_lambda {
  id: ID!
  name: String!
  type: OrganizationType
}

type OrganizationWithUsers @aws_api_key @aws_lambda {
  organization: Organization!
  users: [User]
}

enum OrganizationType {
  DISTRICT
  NATIONAL
  SCHOOL
  STATE
  UNKNOWN
}

input OrganizationInput {
  id: ID!
  name: String!
  type: OrganizationType!
}

input SaveOrgUserInput {
  id: ID
  firstName: String
  lastName: String
  email: AWSEmail
  role: UserRole!
  username: String!
  enabled: Boolean
  orgId: String!
}

# ** Users ** #
type User @aws_api_key @aws_lambda {
  id: ID!
  firstName: String!
  lastName: String!
  email: AWSEmail!
  role: UserRole!
  username: String!
  enabled: Boolean!
}

enum UserRole {
  TENANT_ADMIN
  MANAGER
  DIRECTOR
  UNKNOWN
}

input SaveUserInput {
  id: ID
  firstName: String
  lastName: String
  email: AWSEmail
  role: UserRole!
  username: String!
  enabled: Boolean
}

# ** Contests ** #
type Contest @aws_api_key @aws_lambda {
  id: ID!
  name: String!
  type: ContestType!
  level: ContestLevel
  startDate: AWSDateTime
  endDate: AWSDateTime
  signUpStartDate: AWSDateTime
  signUpEndDate: AWSDateTime
  managers: [Manager]
}

type Manager @aws_api_key @aws_lambda {
  id: ID!
  firstName: String!
  lastName: String!
  email: AWSEmail!
}

# TODO create registration schema
# type Entry @aws_api_key @aws_lambda {
#   id: ID!
#   directorId: ID!
#   musicSelections: [MusicSelection]
# }

# type MusicSelection @aws_api_key @aws_lambda {
#   title: String!
#   composerFirstName: String
#   composerLastName: String
# }

input SaveContestInput {
  id: ID
  name: String!
  type: ContestType!
  level: ContestLevel
  startDate: AWSDateTime
  endDate: AWSDateTime
  signUpStartDate: AWSDateTime
  signUpEndDate: AWSDateTime
}

enum ContestType {
  ORCHESTRA
  MARCHING_BAND
  UNKNOWN
}

enum ContestLevel {
  DISTRICT
  STATE
  UNKNOWN
}
