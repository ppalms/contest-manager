schema @aws_api_key @aws_lambda {
  query: Query
  mutation: Mutation
}

# ** Organizations ** #
type Query @aws_api_key @aws_lambda {
  getOrganizationWithUsers(id: String!): OrganizationWithUsers
  listOrganizations: [Organization]
}

type Mutation @aws_api_key @aws_lambda {
  createOrganization(organization: OrganizationInput!): Organization
  deleteOrganization(id: String!): String
  updateOrganization(organization: UpdateOrganizationInput!): Organization
  saveUser(user: SaveUserInput): User
}

type Organization @aws_api_key @aws_lambda {
  id: ID!
  name: String!
  type: OrganizationType
}

type OrganizationWithUsers @aws_api_key @aws_lambda {
  organization: Organization!
  users: [User]
}

enum OrganizationType {
  DISTRICT
  NATIONAL
  SCHOOL
  STATE
  UNKNOWN
}

input OrganizationInput {
  id: ID!
  name: String!
  type: OrganizationType!
}

input UpdateOrganizationInput {
  id: ID!
  name: String!
  type: OrganizationType!
}

# ** Users ** #
type User @aws_api_key @aws_lambda {
  id: ID!
  username: String!
  firstName: String!
  lastName: String!
  email: AWSEmail!
  role: UserRole!
  enabled: Boolean!
}

enum UserRole {
  TENANT_ADMIN
  CONTEST_MANAGER
  UNKNOWN
}

input SaveUserInput {
  id: ID
  username: String!
  firstName: String
  lastName: String
  email: AWSEmail
  role: UserRole
  organizationId: ID!
}
